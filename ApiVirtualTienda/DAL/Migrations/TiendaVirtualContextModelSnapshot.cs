// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(TiendaVirtualContext))]
    partial class TiendaVirtualContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Detalle", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("FacturaCodigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("ProductoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ValorDescuento")
                        .HasColumnType("decimal(17,4)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(17,4)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(17,4)");

                    b.HasKey("Codigo");

                    b.HasIndex("FacturaCodigo");

                    b.HasIndex("ProductoId");

                    b.ToTable("Detalles");
                });

            modelBuilder.Entity("Entity.Factura", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(17,4)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(17,4)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(17,4)");

                    b.Property<decimal>("ValorSinDescuento")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("factura_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Facturas");

                    b.HasDiscriminator<string>("factura_type").HasValue("Factura");
                });

            modelBuilder.Entity("Entity.Producto", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("ProveedorNIT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ValorDescontado")
                        .HasColumnType("decimal(17,4)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(17,4)");

                    b.HasKey("Codigo");

                    b.HasIndex("ProveedorNIT");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Entity.Proveedor", b =>
                {
                    b.Property<string>("NIT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NIT");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Entity.Usuario", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyDesEncriptarPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Entity.UsuarioInteresado", b =>
                {
                    b.Property<string>("NIT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioEmail")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NIT");

                    b.HasIndex("UsuarioEmail");

                    b.ToTable("Interesados");
                });

            modelBuilder.Entity("Entity.FacturaCompra", b =>
                {
                    b.HasBaseType("Entity.Factura");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("factura_compra");
                });

            modelBuilder.Entity("Entity.FacturaVenta", b =>
                {
                    b.HasBaseType("Entity.Factura");

                    b.Property<string>("InteresadoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioVentasId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("InteresadoId");

                    b.HasIndex("UsuarioVentasId");

                    b.HasDiscriminator().HasValue("factura_venta");
                });

            modelBuilder.Entity("Entity.Detalle", b =>
                {
                    b.HasOne("Entity.Factura", null)
                        .WithMany()
                        .HasForeignKey("FacturaCodigo");

                    b.HasOne("Entity.Producto", null)
                        .WithMany()
                        .HasForeignKey("ProductoId");
                });

            modelBuilder.Entity("Entity.Producto", b =>
                {
                    b.HasOne("Entity.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("ProveedorNIT");
                });

            modelBuilder.Entity("Entity.UsuarioInteresado", b =>
                {
                    b.HasOne("Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioEmail");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entity.FacturaVenta", b =>
                {
                    b.HasOne("Entity.UsuarioInteresado", null)
                        .WithMany()
                        .HasForeignKey("InteresadoId");

                    b.HasOne("Entity.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioVentasId");
                });
#pragma warning restore 612, 618
        }
    }
}
